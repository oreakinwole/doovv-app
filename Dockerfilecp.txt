# Stage 1: Build the application
FROM node:18-alpine AS builder

# Install build dependencies
RUN apk add --no-cache \
    python3 \
    make \
    g++ \
    chromium \
    nss \
    freetype \
    freetype-dev \
    harfbuzz \
    ca-certificates \
    ttf-freefont \
    font-noto-emoji \
    wqy-zenhei

WORKDIR /app

# Copy package files first for better caching
COPY package*.json ./

# Install dependencies
RUN npm install -g @nestjs/cli && \
    npm ci && \
    npm cache clean --force

# Copy application files
COPY . .

# Build the application
RUN npm run build

# Stage 2: Production image
FROM mcr.microsoft.com/playwright:v1.40.0-focal

# Install Node.js and runtime dependencies
RUN apt-get update && apt-get install -y \
    curl \
    dumb-init \
    fonts-liberation \
    fonts-noto-color-emoji \
    fonts-noto-cjk \
    && curl -fsSL https://deb.nodesource.com/setup_18.x | bash - \
    && apt-get install -y nodejs \
    && rm -rf /var/lib/apt/lists/*

# Create a non-root user for security
RUN groupadd -r nodejs && useradd -r -g nodejs nestjs

# Set working directory
WORKDIR /app

# Set environment variables
ENV NODE_ENV=production
ENV GOOGLE_APPLICATION_CREDENTIALS=/app/bamboo-242711-53ff35294c3d.json
ENV PLAYWRIGHT_BROWSERS_PATH=/ms-playwright
ENV PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD=1

# Copy built application from builder stage
COPY --from=builder --chown=nestjs:nodejs /app/dist ./dist
COPY --from=builder --chown=nestjs:nodejs /app/node_modules ./node_modules
COPY --from=builder --chown=nestjs:nodejs /app/package*.json ./

# Copy credential files with proper permissions
COPY --chown=nestjs:nodejs ./bamboo-242711-53ff35294c3d.json ./
COPY --chown=nestjs:nodejs ./moniger-service-account-file-413516-66a99e351ad8.json ./

# Copy templates with proper permissions
COPY --chown=nestjs:nodejs ./mail-templates ./mail-templates
COPY --chown=nestjs:nodejs ./templates ./templates

# Create necessary directories
RUN mkdir -p /tmp/playwright-user-data && \
    chown -R nestjs:nodejs /tmp/playwright-user-data && \
    chmod -R 755 /tmp/playwright-user-data

# Install only production dependencies
RUN npm ci --only=production && npm cache clean --force

# Switch to non-root user
USER nestjs

# Expose port
EXPOSE 8080

# Use dumb-init to handle signals properly
ENTRYPOINT ["dumb-init", "--"]

# Start command
CMD ["node", "dist/main"]